{
  "contractName": "BitCollect",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "cont",
          "type": "address"
        }
      ],
      "name": "campaignCreated",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_organizers",
          "type": "address[]"
        },
        {
          "internalType": "address payable[]",
          "name": "_beneficiaries",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_end_date",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "rewards_names",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "rewards_costs",
          "type": "uint256[]"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "t",
          "type": "uint256"
        }
      ],
      "name": "setThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cont\",\"type\":\"address\"}],\"name\":\"campaignCreated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_organizers\",\"type\":\"address[]\"},{\"internalType\":\"address payable[]\",\"name\":\"_beneficiaries\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_end_date\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"rewards_names\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rewards_costs\",\"type\":\"uint256[]\"}],\"name\":\"createCampaign\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"}],\"name\":\"setThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/G/SSD Workspace/Ethereum/BitCollect/contracts/BitCollect.sol\":\"BitCollect\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/G/SSD Workspace/Ethereum/BitCollect/contracts/BitCollect.sol\":{\"keccak256\":\"0xaa4473e3792471c0661f2a309a4d72465bf6c572c8810140ea77d3eefbd902a6\",\"urls\":[\"bzz-raw://c7b10b734fcd92daee314da5134137eadda8ad69c1d683bf61480e8d88cda6f6\",\"dweb:/ipfs/QmQhJcKn5odgQLVMaDL3hYV914QsRSQCVdxhoPkLiReymw\"]},\"/G/SSD Workspace/Ethereum/BitCollect/contracts/Campaign.sol\":{\"keccak256\":\"0x7454358d5d2af0e22cb04def96ff9b3dfcbf0a36f1e804192f4a79e3e85612e2\",\"urls\":[\"bzz-raw://724b13e287a3fbb77155e06bc3bd8ec7fa0f0325713e89a8292030cf389938b1\",\"dweb:/ipfs/QmWzZMnwDtEXqEmvzf9LNX1Mq6tFd1fKnnTruyhVXgfsea\"]},\"/G/SSD Workspace/Ethereum/BitCollect/contracts/Library.sol\":{\"keccak256\":\"0x6662476657a886445ff38a56ef3aecdc1ce36f71f5b0294ed2d8b2f80c142210\",\"urls\":[\"bzz-raw://a221ee26f59fd3ad1583b07fd743ee1bfb3482587bf4e7e5303ae691e82a27cc\",\"dweb:/ipfs/QmeP7ekMYwWjb4XkYwJv6j8h13WHV94G3KjYniyrSaLCEN\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106200002c5760003560e01c8063833c1a811462000031578063960bfe041462000051575b600080fd5b6200004f6004803603620000499190810190620006a2565b6200007f565b005b3480156200005e57600080fd5b506200007d6004803603620000779190810190620007b5565b620002d7565b005b6000865111620000c6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bd9062000e30565b60405180910390fd5b60008551116200010d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001049062000e0e565b60405180910390fd5b42841162000152576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001499062000e74565b60405180910390fd5b805182511462000199576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001909062000dec565b60405180910390fd5b6000868686868686600454604051620001b29062000373565b620001c4979695949392919062000d4c565b604051809103906000f080158015620001e1573d6000803e3d6000fd5b50905060018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001808054905003600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f3b5c6dff367f8fe540e018ee8cb76957ce7d9fafe57f188fa343a6d06084475581604051620002c6919062000d2f565b60405180910390a150505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000369576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003609062000e52565b60405180910390fd5b8060048190555050565b61493280620011d583390190565b600081359050620003928162001186565b92915050565b600081359050620003a981620011a0565b92915050565b600082601f830112620003c157600080fd5b8135620003d8620003d28262000ec4565b62000e96565b91508181835260208401935060208101905083856020840282011115620003fe57600080fd5b60005b8381101562000432578162000417888262000381565b84526020840193506020830192505060018101905062000401565b5050505092915050565b600082601f8301126200044e57600080fd5b8135620004656200045f8262000eed565b62000e96565b915081818352602084019350602081019050838560208402820111156200048b57600080fd5b60005b83811015620004bf5781620004a4888262000398565b8452602084019350602083019250506001810190506200048e565b5050505092915050565b600082601f830112620004db57600080fd5b8135620004f2620004ec8262000f16565b62000e96565b9150818183526020840193506020810190508360005b838110156200053c5781358601620005218882620005d3565b84526020840193506020830192505060018101905062000508565b5050505092915050565b600082601f8301126200055857600080fd5b81356200056f620005698262000f3f565b62000e96565b915081818352602084019350602081019050838560208402820111156200059557600080fd5b60005b83811015620005c95781620005ae88826200068b565b84526020840193506020830192505060018101905062000598565b5050505092915050565b600082601f830112620005e557600080fd5b8135620005fc620005f68262000f68565b62000e96565b915080825260208301602083018583830111156200061957600080fd5b6200062683828462001130565b50505092915050565b600082601f8301126200064157600080fd5b813562000658620006528262000f95565b62000e96565b915080825260208301602083018583830111156200067557600080fd5b6200068283828462001130565b50505092915050565b6000813590506200069c81620011ba565b92915050565b60008060008060008060c08789031215620006bc57600080fd5b600087013567ffffffffffffffff811115620006d757600080fd5b620006e589828a01620003af565b965050602087013567ffffffffffffffff8111156200070357600080fd5b6200071189828a016200043c565b95505060406200072489828a016200068b565b945050606087013567ffffffffffffffff8111156200074257600080fd5b6200075089828a016200062f565b935050608087013567ffffffffffffffff8111156200076e57600080fd5b6200077c89828a01620004c9565b92505060a087013567ffffffffffffffff8111156200079a57600080fd5b620007a889828a0162000546565b9150509295509295509295565b600060208284031215620007c857600080fd5b6000620007d8848285016200068b565b91505092915050565b6000620007ef838362000845565b60208301905092915050565b600062000809838362000856565b60208301905092915050565b600062000823838362000a78565b905092915050565b600062000839838362000d0d565b60208301905092915050565b6200085081620010f2565b82525050565b6200086181620010de565b82525050565b6200087281620010de565b82525050565b6000620008858262001002565b62000891818562001078565b93506200089e8362000fc2565b8060005b83811015620008d5578151620008b98882620007fb565b9750620008c68362001044565b925050600181019050620008a2565b5085935050505092915050565b6000620008ef826200100d565b620008fb818562001089565b9350620009088362000fd2565b8060005b838110156200093f578151620009238882620007e1565b9750620009308362001051565b9250506001810190506200090c565b5085935050505092915050565b6000620009598262001018565b6200096581856200109a565b935083602082028501620009798562000fe2565b8060005b85811015620009bb578484038952815162000999858262000815565b9450620009a6836200105e565b925060208a019950506001810190506200097d565b50829750879550505050505092915050565b6000620009da8262001023565b620009e68185620010ab565b9350620009f38362000ff2565b8060005b8381101562000a2a57815162000a0e88826200082b565b975062000a1b836200106b565b925050600181019050620009f7565b5085935050505092915050565b600062000a448262001039565b62000a508185620010cd565b935062000a628185602086016200113f565b62000a6d8162001175565b840191505092915050565b600062000a85826200102e565b62000a918185620010bc565b935062000aa38185602086016200113f565b62000aae8162001175565b840191505092915050565b600062000ac8604283620010cd565b91507f4572726f723a207265776172647320616e64207265776172647320707269636560008301527f732073686f756c642068617665207468652073616d652063617264696e616c6960208301527f74790000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600062000b56602383620010cd565b91507f4572726f723a204e656564206174206c6561737420312062656e65666963696160008301527f72696500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600062000bbe602083620010cd565b91507f4572726f723a204e656564206174206c656173742031206f7267616e697a65726000830152602082019050919050565b600062000c00604383620010cd565b91507f6f6e6c7920746865206f776e6572206f66207468697320426974436f6c6c656360008301527f7420696e7374616e63652063616e2061636365737320746869732066756e637460208301527f696f6e00000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600062000c8e604683620010cd565b91507f4572726f723a207468652070726f76696465642063616d7061696e20656e642060008301527f6461746520696c206973206561726c696572207468616e20746865207374617260208301527f74206461746500000000000000000000000000000000000000000000000000006040830152606082019050919050565b62000d188162001126565b82525050565b62000d298162001126565b82525050565b600060208201905062000d46600083018462000867565b92915050565b600060e082019050818103600083015262000d68818a62000878565b9050818103602083015262000d7e8189620008e2565b905062000d8f604083018862000d1e565b818103606083015262000da3818762000a37565b9050818103608083015262000db981866200094c565b905081810360a083015262000dcf8185620009cd565b905062000de060c083018462000d1e565b98975050505050505050565b6000602082019050818103600083015262000e078162000ab9565b9050919050565b6000602082019050818103600083015262000e298162000b47565b9050919050565b6000602082019050818103600083015262000e4b8162000baf565b9050919050565b6000602082019050818103600083015262000e6d8162000bf1565b9050919050565b6000602082019050818103600083015262000e8f8162000c7f565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000eba57600080fd5b8060405250919050565b600067ffffffffffffffff82111562000edc57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000f0557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000f2e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000f5757600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000f8057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111562000fad57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000620010eb8262001106565b9050919050565b6000620010ff8262001106565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156200115f57808201518184015260208101905062001142565b838111156200116f576000848401525b50505050565b6000601f19601f8301169050919050565b6200119181620010de565b81146200119d57600080fd5b50565b620011ab81620010f2565b8114620011b757600080fd5b50565b620011c58162001126565b8114620011d157600080fd5b5056fe60806040523480156200001157600080fd5b506040516200493238038062004932833981810160405262000037919081019062000917565b60008751905060008090505b81811015620001405760028982815181106200005b57fe5b602002602001015190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506000600360008b8481518110620000d957fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808060010191505062000043565b508651905060008090505b81811015620002a75760058882815181106200016357fe5b602002602001015190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506000600660008a8481518110620001e157fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506001600660008a84815181106200023d57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff02191690831515021790555080806001019150506200014b565b50856010819055508460019080519060200190620002c79291906200038a565b5060008060006101000a81548160ff02191690836004811115620002e757fe5b021790555083600a90805190602001906200030492919062000411565b5082600b90805190602001906200031d92919062000478565b5081600c819055506000600d8190555060006004819055507f66fe4817acfd8756899e5d70b8db5e2f51795f380411f9aa53f14f246cd7d2046000809054906101000a900460ff1660405162000374919062000a52565b60405180910390a1505050505050505062000ca8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003cd57805160ff1916838001178555620003fe565b82800160010185558215620003fe579182015b82811115620003fd578251825591602001919060010190620003e0565b5b5090506200040d9190620004ca565b5090565b82805482825590600052602060002090810192821562000465579160200282015b828111156200046457825182908051906020019062000453929190620004f2565b509160200191906001019062000432565b5b50905062000474919062000579565b5090565b828054828255906000526020600020908101928215620004b7579160200282015b82811115620004b657825182559160200191906001019062000499565b5b509050620004c69190620004ca565b5090565b620004ef91905b80821115620004eb576000816000905550600101620004d1565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200053557805160ff191683800117855562000566565b8280016001018555821562000566579182015b828111156200056557825182559160200191906001019062000548565b5b509050620005759190620004ca565b5090565b620005a791905b80821115620005a35760008181620005999190620005aa565b5060010162000580565b5090565b90565b50805460018160011615610100020316600290046000825580601f10620005d25750620005f3565b601f016020900490600052602060002090810190620005f29190620004ca565b5b50565b600081519050620006078162000c5a565b92915050565b6000815190506200061e8162000c74565b92915050565b600082601f8301126200063657600080fd5b81516200064d620006478262000a9d565b62000a6f565b915081818352602084019350602081019050838560208402820111156200067357600080fd5b60005b83811015620006a757816200068c8882620005f6565b84526020840193506020830192505060018101905062000676565b5050505092915050565b600082601f830112620006c357600080fd5b8151620006da620006d48262000ac6565b62000a6f565b915081818352602084019350602081019050838560208402820111156200070057600080fd5b60005b838110156200073457816200071988826200060d565b84526020840193506020830192505060018101905062000703565b5050505092915050565b600082601f8301126200075057600080fd5b815162000767620007618262000aef565b62000a6f565b9150818183526020840193506020810190508360005b83811015620007b1578151860162000796888262000848565b8452602084019350602083019250506001810190506200077d565b5050505092915050565b600082601f830112620007cd57600080fd5b8151620007e4620007de8262000b18565b62000a6f565b915081818352602084019350602081019050838560208402820111156200080a57600080fd5b60005b838110156200083e578162000823888262000900565b8452602084019350602083019250506001810190506200080d565b5050505092915050565b600082601f8301126200085a57600080fd5b8151620008716200086b8262000b41565b62000a6f565b915080825260208301602083018583830111156200088e57600080fd5b6200089b83828462000c16565b50505092915050565b600082601f830112620008b657600080fd5b8151620008cd620008c78262000b6e565b62000a6f565b91508082526020830160208301858383011115620008ea57600080fd5b620008f783828462000c16565b50505092915050565b600081519050620009118162000c8e565b92915050565b600080600080600080600060e0888a0312156200093357600080fd5b600088015167ffffffffffffffff8111156200094e57600080fd5b6200095c8a828b0162000624565b975050602088015167ffffffffffffffff8111156200097a57600080fd5b620009888a828b01620006b1565b96505060406200099b8a828b0162000900565b955050606088015167ffffffffffffffff811115620009b957600080fd5b620009c78a828b01620008a4565b945050608088015167ffffffffffffffff811115620009e557600080fd5b620009f38a828b016200073e565b93505060a088015167ffffffffffffffff81111562000a1157600080fd5b62000a1f8a828b01620007bb565b92505060c062000a328a828b0162000900565b91505092959891949750929550565b62000a4c8162000c02565b82525050565b600060208201905062000a69600083018462000a41565b92915050565b6000604051905081810181811067ffffffffffffffff8211171562000a9357600080fd5b8060405250919050565b600067ffffffffffffffff82111562000ab557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000ade57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000b0757600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000b3057600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111562000b5957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111562000b8657600080fd5b601f19601f8301169050602081019050919050565b600062000ba88262000bd8565b9050919050565b600062000bbc8262000bd8565b9050919050565b600081905062000bd38262000c4c565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000c0f8262000bc3565b9050919050565b60005b8381101562000c3657808201518184015260208101905062000c19565b8381111562000c46576000848401525b50505050565b6005811062000c5757fe5b50565b62000c658162000b9b565b811462000c7157600080fd5b50565b62000c7f8162000baf565b811462000c8b57600080fd5b50565b62000c998162000bf8565b811462000ca557600080fd5b50565b613c7a8062000cb86000396000f3fe6080604052600436106100e85760003560e01c80639af6549a1161008a578063c19d93fb11610059578063c19d93fb1461025e578063d059de1914610289578063e86ae700146102a5578063efeb5e58146102e2576100e8565b80639af6549a146101e95780639c378d8014610200578063a4c8be1e1461020a578063a4e00d6e14610247576100e8565b80635f8d96de116100c65780635f8d96de1461015157806371aac7f91461017c5780637f1e573c14610193578063913b722c146101be576100e8565b806324881536146100ed5780634f42b0d8146101095780635d3e961314610113575b600080fd5b61010760048036036101029190810190612c01565b61031f565b005b6101116108fd565b005b34801561011f57600080fd5b5061013a60048036036101359190810190612bd8565b610f29565b604051610148929190613955565b60405180910390f35b34801561015d57600080fd5b50610166610f5a565b604051610173919061393a565b60405180910390f35b34801561018857600080fd5b50610191610f64565b005b34801561019f57600080fd5b506101a86111e4565b6040516101b59190613718565b60405180910390f35b3480156101ca57600080fd5b506101d3611496565b6040516101e091906136b9565b60405180910390f35b3480156101f557600080fd5b506101fe611524565b005b610208611829565b005b34801561021657600080fd5b50610231600480360361022c9190810190612d7d565b611a8a565b60405161023e919061365a565b60405180910390f35b34801561025357600080fd5b5061025c611ac6565b005b34801561026a57600080fd5b50610273611cbf565b60405161028091906136fd565b60405180910390f35b6102a3600480360361029e9190810190612ce6565b611cd1565b005b3480156102b157600080fd5b506102cc60048036036102c79190810190612ca5565b6123c6565b6040516102d991906136db565b60405180910390f35b3480156102ee57600080fd5b5061030960048036036103049190810190612d7d565b6125a3565b6040516103169190613675565b60405180910390f35b426010548110610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b9061375a565b60405180910390fd5b33600080905060008090505b60028054905081108015610382575081155b15610404578273ffffffffffffffffffffffffffffffffffffffff16600282815481106103ab57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103f757600191505b8080600101915050610370565b5080610445576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043c9061387a565b60405180910390fd5b888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050600080905060008090505b600580549050811080156104a4575081155b1561054e576000151560066000600584815481106104be57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515141561054157600191505b8080600101915050610492565b506000151581151514610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d906138da565b60405180910390fd5b60008060009054906101000a900460ff1660048111156105b257fe5b8160048111156105be57fe5b146105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f59061377a565b60405180910390fd5b6106cf8c8c80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508b8b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050508a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611cd1565b60001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610781576001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600080905060008090505b60028054905081101561083f576001151560036000600284815481106107ae57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156108325781806001019250505b808060010191505061078c565b50346004600082825401925050819055506002805490508114156108855760016000806101000a81548160ff0219169083600481111561087b57fe5b02179055506108a9565b60008060006101000a81548160ff021916908360048111156108a357fe5b02179055505b7f66fe4817acfd8756899e5d70b8db5e2f51795f380411f9aa53f14f246cd7d2046000809054906101000a900460ff166040516108e691906136fd565b60405180910390a150505050505050505050505050565b60046000809054906101000a900460ff16600481111561091957fe5b81600481111561092557fe5b14610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061377a565b60405180910390fd5b600060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156109c957600190506109ce565b600090505b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490501180610a5d57506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a939061385a565b60405180910390fd5b60008090506060600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610d0957838290600052602060002090600702016040518060a00160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015610bb457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b6a575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c0c57602002820191906000526020600020905b815481526020019060010190808311610bf8575b50505050508152602001600382016040518060600160405290816000820154815260200160018201548152602001600282018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cd25780601f10610ca757610100808354040283529160200191610cd2565b820191906000526020600020905b815481529060010190602001808311610cb557829003601f168201915b50505050508152505081526020016006820160009054906101000a900460ff16151515158152505081526020019060010190610b02565b5050505090505b8051831015610d4257808381518110610d2557fe5b602002602001015160000151820191508280600101935050610d10565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610d8d919061260e565b60008090506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610e3357600e8054905060045481610dea57fe5b0490506000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60003373ffffffffffffffffffffffffffffffffffffffff16828501604051610e5b90613645565b60006040518083038185875af1925050503d8060008114610e98576040519150601f19603f3d011682016040523d82523d6000602084013e610e9d565b606091505b505090506001151581151514610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf906137fa565b60405180910390fd5b7f9bb5f29b9278b7f706a7caa67770ad63d5af89b481bdc02309439d76ca0a19df8483604051610f1992919061397e565b60405180910390a1505050505050565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16905082565b6000601054905090565b33600080905060008090505b60028054905081108015610f82575081155b15611004578273ffffffffffffffffffffffffffffffffffffffff1660028281548110610fab57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ff757600191505b8080600101915050610f70565b5080611045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103c9061387a565b60405180910390fd5b60016000809054906101000a900460ff16600481111561106157fe5b81600481111561106d57fe5b146110ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a49061377a565b60405180910390fd5b60026000806101000a81548160ff021916908360048111156110cb57fe5b02179055506000600d54111561119a576000600580549050600d54816110ed57fe5b04905060008090505b6005805490508110156111975781600660006005848154811061111557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555080806001019150506110f6565b50505b7f66fe4817acfd8756899e5d70b8db5e2f51795f380411f9aa53f14f246cd7d2046000809054906101000a900460ff166040516111d791906136fd565b60405180910390a1505050565b60608060405180602001604052806000815250905060606040518060400160405280600181526020017f400000000000000000000000000000000000000000000000000000000000000081525090506060600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561137c57838290600052602060002090600302016040518060600160405290816000820154815260200160018201548152602001600282018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113645780601f1061133957610100808354040283529160200191611364565b820191906000526020600020905b81548152906001019060200180831161134757829003601f168201915b50505050508152505081526020019060010190611294565b50505050905060008090505b815181101561148c5760008090505b8282815181106113a357fe5b602002602001015160000151811161147e5761146f8585600a84815481106113c757fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114655780601f1061143a57610100808354040283529160200191611465565b820191906000526020600020905b81548152906001019060200180831161144857829003601f168201915b50505050506125df565b94508080600101915050611397565b508080600101915050611388565b5082935050505090565b6060600580548060200260200160405190810160405280929190818152602001828054801561151a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116114d0575b5050505050905090565b3360011515600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146115bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115b2906137ba565b60405180910390fd5b60026000809054906101000a900460ff1660048111156115d757fe5b8160048111156115e357fe5b14611623576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161a9061377a565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116116a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169f9061373a565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161175d90613645565b60006040518083038185875af1925050503d806000811461179a576040519150601f19603f3d011682016040523d82523d6000602084013e61179f565b606091505b5050905060011515811515146117ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e1906137da565b60405180910390fd5b7f93740124b37b8f64043ddd706a499c11b58d2642466169e4c310f6b55ead67b6338360405161181b929190613690565b60405180910390a150505050565b60016000809054906101000a900460ff16600481111561184557fe5b81600481111561185157fe5b14611891576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118889061377a565b60405180910390fd5b6000600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414611913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190a9061389a565b60405180910390fd5b60003411611956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194d9061391a565b60405180910390fd5b34600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600e3390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505034600d60008282540192505081905550600c54600e8054905010611a425760046000806101000a81548160ff02191690836004811115611a3c57fe5b02179055505b7ff0ffd3bfdde8a6f01970d2ce17ab4bdb3d8ea65ed7efca58c63c1c0cc7a8a1826000809054906101000a900460ff16604051611a7f91906136fd565b60405180910390a150565b60028181548110611a9757fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b33600080905060008090505b60028054905081108015611ae4575081155b15611b66578273ffffffffffffffffffffffffffffffffffffffff1660028281548110611b0d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b5957600191505b8080600101915050611ad2565b5080611ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9e9061387a565b60405180910390fd5b60026000809054906101000a900460ff166004811115611bc357fe5b816004811115611bcf57fe5b14611c0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c069061377a565b60405180910390fd5b60004714611c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c499061381a565b60405180910390fd5b60036000806101000a81548160ff02191690836004811115611c7057fe5b02179055507f66fe4817acfd8756899e5d70b8db5e2f51795f380411f9aa53f14f246cd7d2046000809054906101000a900460ff16604051611cb291906136fd565b60405180910390a1505050565b6000809054906101000a900460ff1681565b426010548110611d16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0d9061375a565b60405180910390fd5b83600080905060008090505b60058054905081108015611d34575081155b15611dde57600015156006600060058481548110611d4e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615151415611dd157600191505b8080600101915050611d22565b506000151581151514611e26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1d906138da565b60405180910390fd5b60016004811115611e3357fe5b6000809054906101000a900460ff166004811115611e4d57fe5b1480611ed9575060006004811115611e6157fe5b6000809054906101000a900460ff166004811115611e7b57fe5b148015611ed8575060001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b5b611f18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0f906138ba565b60405180910390fd5b60003411611f5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f52906138fa565b60405180910390fd5b8451865114611f9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f969061383a565b60405180910390fd5b600080905060008090505b8651811015611fd857868181518110611fbf57fe5b6020026020010151820191508080600101915050611faa565b5080341461201b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120129061379a565b60405180910390fd5b612023612632565b34816000018181525050878160200181905250868160400181905250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000209060070201600090919290919091506000820151816000015560208201518160010190805190602001906120d0929190612669565b5060408201518160020190805190602001906120ed9291906126f3565b5060608201518160030160008201518160000155602082015181600101556040820151816002019080519060200190612127929190612740565b50505060808201518160060160006101000a81548160ff0219169083151502179055505050506000600b8054905011801561217a5750600b60008154811061216b57fe5b90600052602060002001543410155b156122fd576121876127c0565b60008090505b600a80549050811080156121b85750600b81815481106121a957fe5b90600052602060002001543410155b156121ca57808060010191505061218d565b600181038260000181815250506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905003826020018181525050878260400181905250600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001556020820151816001015560408201518160020190805190602001906122ca929190612740565b505050507f744b881a25971efd286cf16da8b9c684ec04deeab58650ac9134f432baa30f1060405160405180910390a150505b60008090505b885181101561238f5787818151811061231857fe5b6020026020010151600660008b848151811061233057fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055508080600101915050612303565b507f69ee10f8865f0d317c7a1b74da8e2cbffcc7097a4077b37fb42fba449101f93560405160405180910390a15050505050505050565b606081600080905060008090505b600580549050811080156123e6575081155b156124905760001515600660006005848154811061240057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515141561248357600191505b80806001019150506123d4565b5060001515811515146124d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124cf906138da565b60405180910390fd5b6060845160405190808252806020026020018201604052801561250a5781602001602082028038833980820191505090505b50905060008090505b8551811015612597576006600087838151811061252c57fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015482828151811061257e57fe5b6020026020010181815250508080600101915050612513565b50809350505050919050565b600581815481106125b057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608383836040516020016125f693929190613614565b60405160208183030381529060405290509392505050565b508054600082556007029060005260206000209081019061262f91906127e1565b50565b6040518060a0016040528060008152602001606081526020016060815260200161265a612863565b81526020016000151581525090565b8280548282559060005260206000209081019282156126e2579160200282015b828111156126e15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612689565b5b5090506126ef9190612884565b5090565b82805482825590600052602060002090810192821561272f579160200282015b8281111561272e578251825591602001919060010190612713565b5b50905061273c91906128c7565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061278157805160ff19168380011785556127af565b828001600101855582156127af579182015b828111156127ae578251825591602001919060010190612793565b5b5090506127bc91906128c7565b5090565b60405180606001604052806000815260200160008152602001606081525090565b61286091905b8082111561285c5760008082016000905560018201600061280891906128ec565b600282016000612818919061290d565b60038201600080820160009055600182016000905560028201600061283d919061292e565b50506006820160006101000a81549060ff0219169055506007016127e7565b5090565b90565b60405180606001604052806000815260200160008152602001606081525090565b6128c491905b808211156128c057600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161288a565b5090565b90565b6128e991905b808211156128e55760008160009055506001016128cd565b5090565b90565b508054600082559060005260206000209081019061290a91906128c7565b50565b508054600082559060005260206000209081019061292b91906128c7565b50565b50805460018160011615610100020316600290046000825580601f106129545750612973565b601f01602090049060005260206000209081019061297291906128c7565b5b50565b60008135905061298581613c09565b92915050565b60008083601f84011261299d57600080fd5b8235905067ffffffffffffffff8111156129b657600080fd5b6020830191508360208202830111156129ce57600080fd5b9250929050565b600082601f8301126129e657600080fd5b81356129f96129f4826139d4565b6139a7565b91508181835260208401935060208101905083856020840282011115612a1e57600080fd5b60005b83811015612a4e5781612a348882612976565b845260208401935060208301925050600181019050612a21565b5050505092915050565b60008083601f840112612a6a57600080fd5b8235905067ffffffffffffffff811115612a8357600080fd5b602083019150836020820283011115612a9b57600080fd5b9250929050565b600082601f830112612ab357600080fd5b8135612ac6612ac1826139fc565b6139a7565b91508181835260208401935060208101905083856020840282011115612aeb57600080fd5b60005b83811015612b1b5781612b018882612bc3565b845260208401935060208301925050600181019050612aee565b5050505092915050565b60008083601f840112612b3757600080fd5b8235905067ffffffffffffffff811115612b5057600080fd5b602083019150836001820283011115612b6857600080fd5b9250929050565b600082601f830112612b8057600080fd5b8135612b93612b8e82613a24565b6139a7565b91508082526020830160208301858383011115612baf57600080fd5b612bba838284613ba9565b50505092915050565b600081359050612bd281613c20565b92915050565b600060208284031215612bea57600080fd5b6000612bf884828501612976565b91505092915050565b60008060008060008060608789031215612c1a57600080fd5b600087013567ffffffffffffffff811115612c3457600080fd5b612c4089828a0161298b565b9650965050602087013567ffffffffffffffff811115612c5f57600080fd5b612c6b89828a01612a58565b9450945050604087013567ffffffffffffffff811115612c8a57600080fd5b612c9689828a01612b25565b92509250509295509295509295565b600060208284031215612cb757600080fd5b600082013567ffffffffffffffff811115612cd157600080fd5b612cdd848285016129d5565b91505092915050565b600080600060608486031215612cfb57600080fd5b600084013567ffffffffffffffff811115612d1557600080fd5b612d21868287016129d5565b935050602084013567ffffffffffffffff811115612d3e57600080fd5b612d4a86828701612aa2565b925050604084013567ffffffffffffffff811115612d6757600080fd5b612d7386828701612b6f565b9150509250925092565b600060208284031215612d8f57600080fd5b6000612d9d84828501612bc3565b91505092915050565b6000612db28383612de5565b60208301905092915050565b6000612dca83836135f6565b60208301905092915050565b612ddf81613b61565b82525050565b612dee81613b06565b82525050565b612dfd81613b06565b82525050565b612e0c81613af4565b82525050565b6000612e1d82613a70565b612e278185613aab565b9350612e3283613a50565b8060005b83811015612e63578151612e4a8882612da6565b9750612e5583613a91565b925050600181019050612e36565b5085935050505092915050565b6000612e7b82613a7b565b612e858185613abc565b9350612e9083613a60565b8060005b83811015612ec1578151612ea88882612dbe565b9750612eb383613a9e565b925050600181019050612e94565b5085935050505092915050565b612ed781613b18565b82525050565b612ee681613b73565b82525050565b6000612ef782613a86565b612f018185613ad8565b9350612f11818560208601613bb8565b612f1a81613beb565b840191505092915050565b6000612f3082613a86565b612f3a8185613ae9565b9350612f4a818560208601613bb8565b80840191505092915050565b6000612f63603883613ad8565b91507f4572726f723a2074686572652068617665206265656e206e6f20646f6e61746960008301527f6f6e7320666f7220746869732062656e656669636961727900000000000000006020830152604082019050919050565b6000612fc9602083613ad8565b91507f4572726f723a2063616d706169676e20646561646c696e6520657870697265646000830152602082019050919050565b6000613009603e83613ad8565b91507f4572726f723a2063616e6e6f742061636365737320746869732066756e63746960008301527f6f6e616c6974792066726f6d207468652063757272656e7420737461746500006020830152604082019050919050565b600061306f604983613ad8565b91507f4572726f723a20546f74616c20706f766964656420776569732061726520646960008301527f66666572656e742066726f6d207468652070726f76696465642077656973207060208301527f6172746974696f6e7300000000000000000000000000000000000000000000006040830152606082019050919050565b60006130fb603183613ad8565b91507f4572726f723a206f6e6c792062656e656669636961726965732063616e20616360008301527f63657373207468652077697468647261770000000000000000000000000000006020830152604082019050919050565b6000613161602183613ad8565b91507f4572726f723a205769746864726177207472616e73616374696f6e206572726f60008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006131c7602683613ad8565b91507f4572726f723a204672617564207265666f756e64207472616e73616374696f6e60008301527f206572726f7200000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061322d603983613ad8565b91507f4572726f723a205761697420756e74696c20616c6c2062656e6566696369617260008301527f69657320776974686472617720746865697220726577617264000000000000006020830152604082019050919050565b6000613293604283613ad8565b91507f4572726f723a2064657374696e61746f72732073697a6520697320646966666560008301527f72656e742066726f6d2074686520776569277320706172746974696f6e20736960208301527f7a650000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b600061331f604083613ad8565b91507f596f752068617665206e6f74206d61646520646f6e6174696f6e732f7265706f60008301527f7274206f7220796f75206861766520616c72656164792077697468647261776e6020830152604082019050919050565b6000613385602683613ad8565b91507f4572726f723a2066756e6374696f6e20726573657276656420746f206f72676160008301527f6e697a65727300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006133eb600083613acd565b9150600082019050919050565b6000613405602e83613ad8565b91507f4572726f723a20596f75206861766520616c7265616479207265706f7274656460008301527f20746869732063616d706169676e0000000000000000000000000000000000006020830152604082019050919050565b600061346b604983613ad8565b91507f4572726f723a205468652063616d706169676e206973206e6f7420737461727460008301527f6564206f7220796f75277265206e6f7420616e206f7267616e697a657220746f60208301527f20737461727420697400000000000000000000000000000000000000000000006040830152606082019050919050565b60006134f7603d83613ad8565b91507f4572726f723a206f6e65206f72206d6f7265206f66207468652070726f76696460008301527f65642062656e6566696369617269657320646f206e6f742065786973740000006020830152604082019050919050565b600061355d601583613ad8565b91507f4572726f723a2030207765692070726f766964656400000000000000000000006000830152602082019050919050565b600061359d603683613ad8565b91507f4572726f723a20596f75206e65656420746f20696e7665737420736f6d65206560008301527f7468657220746f207265706f72742061206672617564000000000000000000006020830152604082019050919050565b6135ff81613b57565b82525050565b61360e81613b57565b82525050565b60006136208286612f25565b915061362c8285612f25565b91506136388284612f25565b9150819050949350505050565b6000613650826133de565b9150819050919050565b600060208201905061366f6000830184612e03565b92915050565b600060208201905061368a6000830184612df4565b92915050565b60006040820190506136a56000830185612dd6565b6136b26020830184613605565b9392505050565b600060208201905081810360008301526136d38184612e12565b905092915050565b600060208201905081810360008301526136f58184612e70565b905092915050565b60006020820190506137126000830184612edd565b92915050565b600060208201905081810360008301526137328184612eec565b905092915050565b6000602082019050818103600083015261375381612f56565b9050919050565b6000602082019050818103600083015261377381612fbc565b9050919050565b6000602082019050818103600083015261379381612ffc565b9050919050565b600060208201905081810360008301526137b381613062565b9050919050565b600060208201905081810360008301526137d3816130ee565b9050919050565b600060208201905081810360008301526137f381613154565b9050919050565b60006020820190508181036000830152613813816131ba565b9050919050565b6000602082019050818103600083015261383381613220565b9050919050565b6000602082019050818103600083015261385381613286565b9050919050565b6000602082019050818103600083015261387381613312565b9050919050565b6000602082019050818103600083015261389381613378565b9050919050565b600060208201905081810360008301526138b3816133f8565b9050919050565b600060208201905081810360008301526138d38161345e565b9050919050565b600060208201905081810360008301526138f3816134ea565b9050919050565b6000602082019050818103600083015261391381613550565b9050919050565b6000602082019050818103600083015261393381613590565b9050919050565b600060208201905061394f6000830184613605565b92915050565b600060408201905061396a6000830185613605565b6139776020830184612ece565b9392505050565b60006040820190506139936000830185613605565b6139a06020830184613605565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156139ca57600080fd5b8060405250919050565b600067ffffffffffffffff8211156139eb57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115613a1357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115613a3b57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000613aff82613b37565b9050919050565b6000613b1182613b37565b9050919050565b60008115159050919050565b6000819050613b3282613bfc565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613b6c82613b85565b9050919050565b6000613b7e82613b24565b9050919050565b6000613b9082613b97565b9050919050565b6000613ba282613b37565b9050919050565b82818337600083830152505050565b60005b83811015613bd6578082015181840152602081019050613bbb565b83811115613be5576000848401525b50505050565b6000601f19601f8301169050919050565b60058110613c0657fe5b50565b613c1281613af4565b8114613c1d57600080fd5b50565b613c2981613b57565b8114613c3457600080fd5b5056fea365627a7a723158204e53806a7a4f9ed5572e63d1f2882acf4dc0a8af5001c070bca94ed62b37d90e6c6578706572696d656e74616cf564736f6c63430005100040a365627a7a723158209020b78dfdc969ead900d428ca23979840757e394b2c6b6ce6ceec55910f902a6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "99:1620:0:-;;;340:202;8:9:-1;5:2;;;30:1;27;20:12;5:2;340:202:0;;;;;;;;;;;;;;;;;;;;;;;;404:1;394:9;:11;386:69;;;;;;;;;;;;;;;;;;;;;;487:10;468:16;;:29;;;;;;;;;;;;;;;;;;525:9;508:14;:26;;;;340:202;99:1620;;5:134:-1;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;417:382;;577:67;641:2;636:3;577:67;;;570:74;;677:34;673:1;668:3;664:11;657:55;746:15;741:2;736:3;732:12;725:37;790:2;785:3;781:12;774:19;;563:236;;;;807:407;;998:2;987:9;983:18;975:26;;1048:9;1042:4;1038:20;1034:1;1023:9;1019:17;1012:47;1073:131;1199:4;1073:131;;;1065:139;;969:245;;;;1222:163;;1337:6;1332:3;1325:19;1374:4;1369:3;1365:14;1350:29;;1318:67;;;;;1393:72;;1455:5;1444:16;;1438:27;;;;1472:117;1541:24;1559:5;1541:24;;;1534:5;1531:35;1521:2;;1580:1;1577;1570:12;1521:2;1515:74;;99:1620:0;;;;;;;",
  "deployedSourceMap": "99:1620:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;550:962;;;;;;;;;;;;;;;;:::i;:::-;;1520:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1520:194:0;;;;;;;;;;;;;;;;:::i;:::-;;550:962;804:1;785:11;:18;:20;777:65;;;;;;;;;;;;;;;;;;;;;;895:1;873:14;:21;:23;865:71;;;;;;;;;;;;;;;;;;;;;;977:15;967:9;:25;959:108;;;;;;;;;;;;;;;;;;;;;;1108:13;:20;1086:13;:20;:42;1078:121;;;;;;;;;;;;;;;;;;;;;;1212:21;1249:11;1262:14;1278:9;1289:4;1295:13;1310;1325:14;;1236:104;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1236:104:0;1212:128;;1351:9;1366:12;1351:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1351:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:1;1430:9;:16;;;;:18;1390:14;:37;1413:12;1390:37;;;;;;;;;;;;;;;:58;;;;1466:38;1490:12;1466:38;;;;;;;;;;;;;;;550:962;;;;;;;:::o;1520:194::-;1589:16;;;;;;;;;;;1577:28;;:10;:28;;;1569:108;;;;;;;;;;;;;;;;;;;;;;1705:1;1688:14;:18;;;;1520:194;:::o;99:1620::-;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:146;;230:6;217:20;208:29;;242:41;277:5;242:41;;;202:86;;;;;313:707;;430:3;423:4;415:6;411:17;407:27;397:2;;448:1;445;438:12;397:2;485:6;472:20;507:80;522:64;579:6;522:64;;;507:80;;;498:89;;604:5;629:6;622:5;615:21;659:4;651:6;647:17;637:27;;681:4;676:3;672:14;665:21;;734:6;781:3;773:4;765:6;761:17;756:3;752:27;749:36;746:2;;;798:1;795;788:12;746:2;823:1;808:206;833:6;830:1;827:13;808:206;;;891:3;913:37;946:3;934:10;913:37;;;908:3;901:50;974:4;969:3;965:14;958:21;;1002:4;997:3;993:14;986:21;;865:149;855:1;852;848:9;843:14;;808:206;;;812:14;390:630;;;;;;;;1054:731;;1179:3;1172:4;1164:6;1160:17;1156:27;1146:2;;1197:1;1194;1187:12;1146:2;1234:6;1221:20;1256:88;1271:72;1336:6;1271:72;;;1256:88;;;1247:97;;1361:5;1386:6;1379:5;1372:21;1416:4;1408:6;1404:17;1394:27;;1438:4;1433:3;1429:14;1422:21;;1491:6;1538:3;1530:4;1522:6;1518:17;1513:3;1509:27;1506:36;1503:2;;;1555:1;1552;1545:12;1503:2;1580:1;1565:214;1590:6;1587:1;1584:13;1565:214;;;1648:3;1670:45;1711:3;1699:10;1670:45;;;1665:3;1658:58;1739:4;1734:3;1730:14;1723:21;;1767:4;1762:3;1758:14;1751:21;;1622:157;1612:1;1609;1605:9;1600:14;;1565:214;;;1569:14;1139:646;;;;;;;;1810:696;;1933:3;1926:4;1918:6;1914:17;1910:27;1900:2;;1951:1;1948;1941:12;1900:2;1988:6;1975:20;2010:86;2025:70;2088:6;2025:70;;;2010:86;;;2001:95;;2113:5;2138:6;2131:5;2124:21;2168:4;2160:6;2156:17;2146:27;;2190:4;2185:3;2181:14;2174:21;;2243:6;2276:1;2261:239;2286:6;2283:1;2280:13;2261:239;;;2369:3;2356:17;2348:6;2344:30;2393:43;2432:3;2420:10;2393:43;;;2388:3;2381:56;2460:4;2455:3;2451:14;2444:21;;2488:4;2483:3;2479:14;2472:21;;2318:182;2308:1;2305;2301:9;2296:14;;2261:239;;;2265:14;1893:613;;;;;;;;2532:707;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:80;2741:64;2798:6;2741:64;;;2726:80;;;2717:89;;2823:5;2848:6;2841:5;2834:21;2878:4;2870:6;2866:17;2856:27;;2900:4;2895:3;2891:14;2884:21;;2953:6;3000:3;2992:4;2984:6;2980:17;2975:3;2971:27;2968:36;2965:2;;;3017:1;3014;3007:12;2965:2;3042:1;3027:206;3052:6;3049:1;3046:13;3027:206;;;3110:3;3132:37;3165:3;3153:10;3132:37;;;3127:3;3120:50;3193:4;3188:3;3184:14;3177:21;;3221:4;3216:3;3212:14;3205:21;;3084:149;3074:1;3071;3067:9;3062:14;;3027:206;;;3031:14;2609:630;;;;;;;;3248:434;;3346:3;3339:4;3331:6;3327:17;3323:27;3313:2;;3364:1;3361;3354:12;3313:2;3401:6;3388:20;3423:61;3438:45;3476:6;3438:45;;;3423:61;;;3414:70;;3504:6;3497:5;3490:21;3540:4;3532:6;3528:17;3573:4;3566:5;3562:16;3608:3;3599:6;3594:3;3590:16;3587:25;3584:2;;;3625:1;3622;3615:12;3584:2;3635:41;3669:6;3664:3;3659;3635:41;;;3306:376;;;;;;;;3691:442;;3793:3;3786:4;3778:6;3774:17;3770:27;3760:2;;3811:1;3808;3801:12;3760:2;3848:6;3835:20;3870:65;3885:49;3927:6;3885:49;;;3870:65;;;3861:74;;3955:6;3948:5;3941:21;3991:4;3983:6;3979:17;4024:4;4017:5;4013:16;4059:3;4050:6;4045:3;4041:16;4038:25;4035:2;;;4076:1;4073;4066:12;4035:2;4086:41;4120:6;4115:3;4110;4086:41;;;3753:380;;;;;;;;4141:130;;4221:6;4208:20;4199:29;;4233:33;4260:5;4233:33;;;4193:78;;;;;4278:1547;;;;;;;4591:3;4579:9;4570:7;4566:23;4562:33;4559:2;;;4608:1;4605;4598:12;4559:2;4671:1;4660:9;4656:17;4643:31;4694:18;4686:6;4683:30;4680:2;;;4726:1;4723;4716:12;4680:2;4746:78;4816:7;4807:6;4796:9;4792:22;4746:78;;;4736:88;;4622:208;4889:2;4878:9;4874:18;4861:32;4913:18;4905:6;4902:30;4899:2;;;4945:1;4942;4935:12;4899:2;4965:86;5043:7;5034:6;5023:9;5019:22;4965:86;;;4955:96;;4840:217;5088:2;5106:53;5151:7;5142:6;5131:9;5127:22;5106:53;;;5096:63;;5067:98;5224:2;5213:9;5209:18;5196:32;5248:18;5240:6;5237:30;5234:2;;;5280:1;5277;5270:12;5234:2;5300:63;5355:7;5346:6;5335:9;5331:22;5300:63;;;5290:73;;5175:194;5428:3;5417:9;5413:19;5400:33;5453:18;5445:6;5442:30;5439:2;;;5485:1;5482;5475:12;5439:2;5505:84;5581:7;5572:6;5561:9;5557:22;5505:84;;;5495:94;;5379:216;5654:3;5643:9;5639:19;5626:33;5679:18;5671:6;5668:30;5665:2;;;5711:1;5708;5701:12;5665:2;5731:78;5801:7;5792:6;5781:9;5777:22;5731:78;;;5721:88;;5605:210;4553:1272;;;;;;;;;5832:241;;5936:2;5924:9;5915:7;5911:23;5907:32;5904:2;;;5952:1;5949;5942:12;5904:2;5987:1;6004:53;6049:7;6040:6;6029:9;6025:22;6004:53;;;5994:63;;5966:97;5898:175;;;;;6081:205;;6184:62;6242:3;6234:6;6184:62;;;6275:4;6270:3;6266:14;6252:28;;6177:109;;;;;6295:173;;6382:46;6424:3;6416:6;6382:46;;;6457:4;6452:3;6448:14;6434:28;;6375:93;;;;;6477:181;;6590:62;6648:3;6640:6;6590:62;;;6576:76;;6569:89;;;;;6667:173;;6754:46;6796:3;6788:6;6754:46;;;6829:4;6824:3;6820:14;6806:28;;6747:93;;;;;6848:127;6937:32;6963:5;6937:32;;;6932:3;6925:45;6919:56;;;6982:103;7055:24;7073:5;7055:24;;;7050:3;7043:37;7037:48;;;7092:113;7175:24;7193:5;7175:24;;;7170:3;7163:37;7157:48;;;7243:690;;7388:54;7436:5;7388:54;;;7455:86;7534:6;7529:3;7455:86;;;7448:93;;7562:56;7612:5;7562:56;;;7638:7;7666:1;7651:260;7676:6;7673:1;7670:13;7651:260;;;7743:6;7737:13;7764:63;7823:3;7808:13;7764:63;;;7757:70;;7844:60;7897:6;7844:60;;;7834:70;;7708:203;7698:1;7695;7691:9;7686:14;;7651:260;;;7655:14;7924:3;7917:10;;7367:566;;;;;;;;7988:754;;8149:62;8205:5;8149:62;;;8224:94;8311:6;8306:3;8224:94;;;8217:101;;8339:64;8397:5;8339:64;;;8423:7;8451:1;8436:284;8461:6;8458:1;8455:13;8436:284;;;8528:6;8522:13;8549:79;8624:3;8609:13;8549:79;;;8542:86;;8645:68;8706:6;8645:68;;;8635:78;;8493:227;8483:1;8480;8476:9;8471:14;;8436:284;;;8440:14;8733:3;8726:10;;8128:614;;;;;;;;8779:896;;8936:60;8990:5;8936:60;;;9009:92;9094:6;9089:3;9009:92;;;9002:99;;9124:3;9166:4;9158:6;9154:17;9149:3;9145:27;9193:62;9249:5;9193:62;;;9275:7;9303:1;9288:348;9313:6;9310:1;9307:13;9288:348;;;9375:9;9369:4;9365:20;9360:3;9353:33;9420:6;9414:13;9442:76;9513:4;9498:13;9442:76;;;9434:84;;9535:66;9594:6;9535:66;;;9525:76;;9624:4;9619:3;9615:14;9608:21;;9345:291;9335:1;9332;9328:9;9323:14;;9288:348;;;9292:14;9649:4;9642:11;;9666:3;9659:10;;8915:760;;;;;;;;;;9714:690;;9859:54;9907:5;9859:54;;;9926:86;10005:6;10000:3;9926:86;;;9919:93;;10033:56;10083:5;10033:56;;;10109:7;10137:1;10122:260;10147:6;10144:1;10141:13;10122:260;;;10214:6;10208:13;10235:63;10294:3;10279:13;10235:63;;;10228:70;;10315:60;10368:6;10315:60;;;10305:70;;10179:203;10169:1;10166;10162:9;10157:14;;10122:260;;;10126:14;10395:3;10388:10;;9838:566;;;;;;;;10412:347;;10524:39;10557:5;10524:39;;;10575:71;10639:6;10634:3;10575:71;;;10568:78;;10651:52;10696:6;10691:3;10684:4;10677:5;10673:16;10651:52;;;10724:29;10746:6;10724:29;;;10719:3;10715:39;10708:46;;10504:255;;;;;;10766:319;;10864:35;10893:5;10864:35;;;10911:61;10965:6;10960:3;10911:61;;;10904:68;;10977:52;11022:6;11017:3;11010:4;11003:5;10999:16;10977:52;;;11050:29;11072:6;11050:29;;;11045:3;11041:39;11034:46;;10844:241;;;;;;11093:440;;11253:67;11317:2;11312:3;11253:67;;;11246:74;;11353:34;11349:1;11344:3;11340:11;11333:55;11422:34;11417:2;11412:3;11408:12;11401:56;11491:4;11486:2;11481:3;11477:12;11470:26;11524:2;11519:3;11515:12;11508:19;;11239:294;;;;11542:372;;11702:67;11766:2;11761:3;11702:67;;;11695:74;;11802:34;11798:1;11793:3;11789:11;11782:55;11871:5;11866:2;11861:3;11857:12;11850:27;11905:2;11900:3;11896:12;11889:19;;11688:226;;;;11923:332;;12083:67;12147:2;12142:3;12083:67;;;12076:74;;12183:34;12179:1;12174:3;12170:11;12163:55;12246:2;12241:3;12237:12;12230:19;;12069:186;;;;12264:441;;12424:67;12488:2;12483:3;12424:67;;;12417:74;;12524:34;12520:1;12515:3;12511:11;12504:55;12593:34;12588:2;12583:3;12579:12;12572:56;12662:5;12657:2;12652:3;12648:12;12641:27;12696:2;12691:3;12687:12;12680:19;;12410:295;;;;12714:444;;12874:67;12938:2;12933:3;12874:67;;;12867:74;;12974:34;12970:1;12965:3;12961:11;12954:55;13043:34;13038:2;13033:3;13029:12;13022:56;13112:8;13107:2;13102:3;13098:12;13091:30;13149:2;13144:3;13140:12;13133:19;;12860:298;;;;13166:103;13239:24;13257:5;13239:24;;;13234:3;13227:37;13221:48;;;13276:113;13359:24;13377:5;13359:24;;;13354:3;13347:37;13341:48;;;13396:213;;13514:2;13503:9;13499:18;13491:26;;13528:71;13596:1;13585:9;13581:17;13572:6;13528:71;;;13485:124;;;;;13616:1619;;14150:3;14139:9;14135:19;14127:27;;14201:9;14195:4;14191:20;14187:1;14176:9;14172:17;14165:47;14226:108;14329:4;14320:6;14226:108;;;14218:116;;14382:9;14376:4;14372:20;14367:2;14356:9;14352:18;14345:48;14407:124;14526:4;14517:6;14407:124;;;14399:132;;14542:72;14610:2;14599:9;14595:18;14586:6;14542:72;;;14662:9;14656:4;14652:20;14647:2;14636:9;14632:18;14625:48;14687:78;14760:4;14751:6;14687:78;;;14679:86;;14814:9;14808:4;14804:20;14798:3;14787:9;14783:19;14776:49;14839:120;14954:4;14945:6;14839:120;;;14831:128;;15008:9;15002:4;14998:20;14992:3;14981:9;14977:19;14970:49;15033:108;15136:4;15127:6;15033:108;;;15025:116;;15152:73;15220:3;15209:9;15205:19;15196:6;15152:73;;;14121:1114;;;;;;;;;;;15242:407;;15433:2;15422:9;15418:18;15410:26;;15483:9;15477:4;15473:20;15469:1;15458:9;15454:17;15447:47;15508:131;15634:4;15508:131;;;15500:139;;15404:245;;;;15656:407;;15847:2;15836:9;15832:18;15824:26;;15897:9;15891:4;15887:20;15883:1;15872:9;15868:17;15861:47;15922:131;16048:4;15922:131;;;15914:139;;15818:245;;;;16070:407;;16261:2;16250:9;16246:18;16238:26;;16311:9;16305:4;16301:20;16297:1;16286:9;16282:17;16275:47;16336:131;16462:4;16336:131;;;16328:139;;16232:245;;;;16484:407;;16675:2;16664:9;16660:18;16652:26;;16725:9;16719:4;16715:20;16711:1;16700:9;16696:17;16689:47;16750:131;16876:4;16750:131;;;16742:139;;16646:245;;;;16898:407;;17089:2;17078:9;17074:18;17066:26;;17139:9;17133:4;17129:20;17125:1;17114:9;17110:17;17103:47;17164:131;17290:4;17164:131;;;17156:139;;17060:245;;;;17312:256;;17374:2;17368:9;17358:19;;17412:4;17404:6;17400:17;17511:6;17499:10;17496:22;17475:18;17463:10;17460:34;17457:62;17454:2;;;17532:1;17529;17522:12;17454:2;17552:10;17548:2;17541:22;17352:216;;;;;17575:304;;17734:18;17726:6;17723:30;17720:2;;;17766:1;17763;17756:12;17720:2;17801:4;17793:6;17789:17;17781:25;;17864:4;17858;17854:15;17846:23;;17657:222;;;;17886:312;;18053:18;18045:6;18042:30;18039:2;;;18085:1;18082;18075:12;18039:2;18120:4;18112:6;18108:17;18100:25;;18183:4;18177;18173:15;18165:23;;17976:222;;;;18205:310;;18370:18;18362:6;18359:30;18356:2;;;18402:1;18399;18392:12;18356:2;18437:4;18429:6;18425:17;18417:25;;18500:4;18494;18490:15;18482:23;;18293:222;;;;18522:304;;18681:18;18673:6;18670:30;18667:2;;;18713:1;18710;18703:12;18667:2;18748:4;18740:6;18736:17;18728:25;;18811:4;18805;18801:15;18793:23;;18604:222;;;;18833:318;;18973:18;18965:6;18962:30;18959:2;;;19005:1;19002;18995:12;18959:2;19072:4;19068:9;19061:4;19053:6;19049:17;19045:33;19037:41;;19136:4;19130;19126:15;19118:23;;18896:255;;;;19158:322;;19302:18;19294:6;19291:30;19288:2;;;19334:1;19331;19324:12;19288:2;19401:4;19397:9;19390:4;19382:6;19378:17;19374:33;19366:41;;19465:4;19459;19455:15;19447:23;;19225:255;;;;19487:151;;19573:3;19565:11;;19611:4;19606:3;19602:14;19594:22;;19559:79;;;;19645:159;;19739:3;19731:11;;19777:4;19772:3;19768:14;19760:22;;19725:79;;;;19811:157;;19903:3;19895:11;;19941:4;19936:3;19932:14;19924:22;;19889:79;;;;19975:151;;20061:3;20053:11;;20099:4;20094:3;20090:14;20082:22;;20047:79;;;;20133:137;;20242:5;20236:12;20226:22;;20207:63;;;;20277:145;;20394:5;20388:12;20378:22;;20359:63;;;;20429:143;;20544:5;20538:12;20528:22;;20509:63;;;;20579:137;;20688:5;20682:12;20672:22;;20653:63;;;;20723:118;;20813:5;20807:12;20797:22;;20778:63;;;;20848:122;;20942:5;20936:12;20926:22;;20907:63;;;;20977:108;;21075:4;21070:3;21066:14;21058:22;;21052:33;;;;21092:116;;21198:4;21193:3;21189:14;21181:22;;21175:33;;;;21215:114;;21319:4;21314:3;21310:14;21302:22;;21296:33;;;;21336:108;;21434:4;21429:3;21425:14;21417:22;;21411:33;;;;21452:178;;21582:6;21577:3;21570:19;21619:4;21614:3;21610:14;21595:29;;21563:67;;;;;21639:186;;21777:6;21772:3;21765:19;21814:4;21809:3;21805:14;21790:29;;21758:67;;;;;21834:184;;21970:6;21965:3;21958:19;22007:4;22002:3;21998:14;21983:29;;21951:67;;;;;22027:178;;22157:6;22152:3;22145:19;22194:4;22189:3;22185:14;22170:29;;22138:67;;;;;22214:153;;22319:6;22314:3;22307:19;22356:4;22351:3;22347:14;22332:29;;22300:67;;;;;22376:163;;22491:6;22486:3;22479:19;22528:4;22523:3;22519:14;22504:29;;22472:67;;;;;22547:91;;22609:24;22627:5;22609:24;;;22598:35;;22592:46;;;;22645:99;;22715:24;22733:5;22715:24;;;22704:35;;22698:46;;;;22751:121;;22824:42;22817:5;22813:54;22802:65;;22796:76;;;;22879:72;;22941:5;22930:16;;22924:27;;;;22959:145;23040:6;23035:3;23030;23017:30;23096:1;23087:6;23082:3;23078:16;23071:27;23010:94;;;;23113:268;23178:1;23185:101;23199:6;23196:1;23193:13;23185:101;;;23275:1;23270:3;23266:11;23260:18;23256:1;23251:3;23247:11;23240:39;23221:2;23218:1;23214:10;23209:15;;23185:101;;;23301:6;23298:1;23295:13;23292:2;;;23366:1;23357:6;23352:3;23348:16;23341:27;23292:2;23162:219;;;;;23389:97;;23477:2;23473:7;23468:2;23461:5;23457:14;23453:28;23443:38;;23437:49;;;;23494:117;23563:24;23581:5;23563:24;;;23556:5;23553:35;23543:2;;23602:1;23599;23592:12;23543:2;23537:74;;23618:133;23695:32;23721:5;23695:32;;;23688:5;23685:43;23675:2;;23742:1;23739;23732:12;23675:2;23669:82;;23758:117;23827:24;23845:5;23827:24;;;23820:5;23817:35;23807:2;;23866:1;23863;23856:12;23807:2;23801:74;",
  "source": "pragma solidity >=0.4.21 <0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./Campaign.sol\";\r\n\r\ncontract BitCollect{\r\n\r\n    address bitcollect_owner;\r\n\r\n    Campaign[] campaigns;\r\n    mapping(address => uint) campaign_index;\r\n    mapping(uint => uint) test;\r\n\r\n    uint fraudThreshold;\r\n\r\n    event campaignCreated(address cont);\r\n\r\n    constructor(uint threshold) public {\r\n        require(threshold>0, \"The fraud threshold should be greather than 0\");\r\n\r\n        bitcollect_owner = msg.sender;\r\n        fraudThreshold = threshold;\r\n    }\r\n\r\n    function createCampaign(address[] memory _organizers, address payable[] memory _beneficiaries, uint _end_date, string memory name,\r\n     string[] memory rewards_names, uint[] memory rewards_costs)\r\n    public payable{\r\n        require(_organizers.length>0, \"Error: Need at least 1 organizer\"); //RQ-PARAMS\r\n        require(_beneficiaries.length>0, \"Error: Need at least 1 beneficiarie\"); //RQ-PARAMS\r\n        require(_end_date>block.timestamp, \"Error: the provided campain end date il is earlier than the start date\");\r\n        require(rewards_names.length==rewards_costs.length, \"Error: rewards and rewards prices should have the same cardinality\");\r\n\r\n        Campaign new_campaign = new Campaign(_organizers, _beneficiaries, _end_date, name, rewards_names, rewards_costs, fraudThreshold);\r\n        campaigns.push(new_campaign);\r\n        campaign_index[address(new_campaign)] = campaigns.length-1;\r\n\r\n        emit campaignCreated(address(new_campaign));\r\n    }\r\n\r\n    function setThreshold(uint t) external{\r\n        require(msg.sender==bitcollect_owner, \"only the owner of this BitCollect instance can access this function\");\r\n        fraudThreshold = t;\r\n    }\r\n\r\n}",
  "sourcePath": "G:\\SSD Workspace\\Ethereum\\BitCollect\\contracts\\BitCollect.sol",
  "ast": {
    "absolutePath": "/G/SSD Workspace/Ethereum/BitCollect/contracts/BitCollect.sol",
    "exportedSymbols": {
      "BitCollect": [
        152
      ]
    },
    "id": 153,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "absolutePath": "/G/SSD Workspace/Ethereum/BitCollect/contracts/Campaign.sol",
        "file": "./Campaign.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 1332,
        "src": "71:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1331
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 152,
        "linearizedBaseContracts": [
          152
        ],
        "name": "BitCollect",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "bitcollect_owner",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "127:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "127:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "campaigns",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "160:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage",
              "typeString": "contract Campaign[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 6,
                "name": "Campaign",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1331,
                "src": "160:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Campaign_$1331",
                  "typeString": "contract Campaign"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "160:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage_ptr",
                "typeString": "contract Campaign[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "name": "campaign_index",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "187:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "195:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "187:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "206:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "name": "test",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "233:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "233:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 14,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "249:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "name": "fraudThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "268:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "268:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "campaignCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "cont",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "318:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:14:0"
            },
            "src": "296:36:0"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "375:167:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 28,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "394:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "404:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "394:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206672617564207468726573686f6c642073686f756c64206265206772656174686572207468616e2030",
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "407:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b5a8de82cdb5b7c08e4ca7bc74dffa6f8f5cc431f35eb659fce627ad8d42618",
                          "typeString": "literal_string \"The fraud threshold should be greather than 0\""
                        },
                        "value": "The fraud threshold should be greather than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b5a8de82cdb5b7c08e4ca7bc74dffa6f8f5cc431f35eb659fce627ad8d42618",
                          "typeString": "literal_string \"The fraud threshold should be greather than 0\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "386:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "386:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "386:69:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "bitcollect_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "468:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "487:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "487:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "468:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "468:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "fraudThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "508:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "525:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "508:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "508:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "352:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "351:16:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:0"
            },
            "scope": 152,
            "src": "340:202:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "766:746:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 64,
                            "name": "_organizers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "785:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "785:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "804:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "785:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a204e656564206174206c656173742031206f7267616e697a6572",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "807:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3fba3570a331c614827e82634fbcb58b28994b20e7b45362a5722631e537665",
                          "typeString": "literal_string \"Error: Need at least 1 organizer\""
                        },
                        "value": "Error: Need at least 1 organizer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3fba3570a331c614827e82634fbcb58b28994b20e7b45362a5722631e537665",
                          "typeString": "literal_string \"Error: Need at least 1 organizer\""
                        }
                      ],
                      "id": 63,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "777:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "777:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "_beneficiaries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "873:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                              "typeString": "address payable[] memory"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "873:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "895:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "873:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a204e656564206174206c6561737420312062656e656669636961726965",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "898:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14a0df87b4e6f6b3ae127ef1de6f07fd857968b9ec5b57bc16bcc25c14830318",
                          "typeString": "literal_string \"Error: Need at least 1 beneficiarie\""
                        },
                        "value": "Error: Need at least 1 beneficiarie"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14a0df87b4e6f6b3ae127ef1de6f07fd857968b9ec5b57bc16bcc25c14830318",
                          "typeString": "literal_string \"Error: Need at least 1 beneficiarie\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "865:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "865:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "_end_date",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "967:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "977:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "977:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "967:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a207468652070726f76696465642063616d7061696e20656e64206461746520696c206973206561726c696572207468616e207468652073746172742064617465",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:72:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5a8be1d7c92fb12c74f9106e4d08162f851c489a9bbd0553f9152a605ff825a",
                          "typeString": "literal_string \"Error: the provided campain end date il is earlier than the start date\""
                        },
                        "value": "Error: the provided campain end date il is earlier than the start date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5a8be1d7c92fb12c74f9106e4d08162f851c489a9bbd0553f9152a605ff825a",
                          "typeString": "literal_string \"Error: the provided campain end date il is earlier than the start date\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "959:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "959:108:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 88,
                            "name": "rewards_names",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1086:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1086:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "rewards_costs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "1108:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1108:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1086:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a207265776172647320616e642072657761726473207072696365732073686f756c642068617665207468652073616d652063617264696e616c697479",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:68:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0744fc57dbd56028a7549e64bdbc6a76d30e45d2337c81dedace388078ab9b86",
                          "typeString": "literal_string \"Error: rewards and rewards prices should have the same cardinality\""
                        },
                        "value": "Error: rewards and rewards prices should have the same cardinality"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0744fc57dbd56028a7549e64bdbc6a76d30e45d2337c81dedace388078ab9b86",
                          "typeString": "literal_string \"Error: rewards and rewards prices should have the same cardinality\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "1078:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:121:0"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "new_campaign",
                      "nodeType": "VariableDeclaration",
                      "scope": 132,
                      "src": "1212:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Campaign_$1331",
                        "typeString": "contract Campaign"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 96,
                        "name": "Campaign",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1331,
                        "src": "1212:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "_organizers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1249:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1262:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_end_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1278:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1289:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "rewards_names",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1295:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "rewards_costs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1310:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "fraudThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1325:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1236:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_array$_t_string_memory_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_contract$_Campaign_$1331_$",
                        "typeString": "function (address[] memory,address payable[] memory,uint256,string memory,string memory[] memory,uint256[] memory,uint256) returns (contract Campaign)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 98,
                        "name": "Campaign",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1331,
                        "src": "1240:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:104:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Campaign_$1331",
                      "typeString": "contract Campaign"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1212:128:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "new_campaign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1366:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "campaigns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1351:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage",
                          "typeString": "contract Campaign[] storage ref"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1351:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Campaign_$1331_$returns$_t_uint256_$",
                        "typeString": "function (contract Campaign) returns (uint256)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "campaign_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1390:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 119,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "new_campaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1413:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          ],
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1405:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1405:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1390:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "campaigns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1430:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage",
                            "typeString": "contract Campaign[] storage ref"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1430:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1430:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1390:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:58:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 128,
                            "name": "new_campaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1490:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          ],
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1482:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1482:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 126,
                      "name": "campaignCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1466:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "EmitStatement",
                  "src": "1461:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCampaign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "name": "_organizers",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "574:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "574:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 46,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "574:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "_beneficiaries",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "604:39:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "604:15:0",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 49,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "604:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_end_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "645:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "661:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "name": "rewards_names",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "687:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "687:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 56,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "687:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "rewards_costs",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "718:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 58,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "718:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "718:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "573:173:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:0:0"
            },
            "scope": 152,
            "src": "550:962:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1558:156:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1416,
                            "src": "1577:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1577:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "bitcollect_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "1589:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1577:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e6572206f66207468697320426974436f6c6c65637420696e7374616e63652063616e2061636365737320746869732066756e6374696f6e",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1607:69:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0db034d0fa7b91f17f8cd5637784ec74b02609a323ee3610f78513c85ae89b",
                          "typeString": "literal_string \"only the owner of this BitCollect instance can access this function\""
                        },
                        "value": "only the owner of this BitCollect instance can access this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0db034d0fa7b91f17f8cd5637784ec74b02609a323ee3610f78513c85ae89b",
                          "typeString": "literal_string \"only the owner of this BitCollect instance can access this function\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "1569:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:108:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "fraudThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1688:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "t",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1705:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1688:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "t",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1542:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1541:8:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:0:0"
            },
            "scope": 152,
            "src": "1520:194:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 153,
        "src": "99:1620:0"
      }
    ],
    "src": "0:1719:0"
  },
  "legacyAST": {
    "absolutePath": "/G/SSD Workspace/Ethereum/BitCollect/contracts/BitCollect.sol",
    "exportedSymbols": {
      "BitCollect": [
        152
      ]
    },
    "id": 153,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "absolutePath": "/G/SSD Workspace/Ethereum/BitCollect/contracts/Campaign.sol",
        "file": "./Campaign.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 153,
        "sourceUnit": 1332,
        "src": "71:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          1331
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 152,
        "linearizedBaseContracts": [
          152
        ],
        "name": "BitCollect",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "name": "bitcollect_owner",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "127:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "127:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "campaigns",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "160:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage",
              "typeString": "contract Campaign[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 6,
                "name": "Campaign",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1331,
                "src": "160:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Campaign_$1331",
                  "typeString": "contract Campaign"
                }
              },
              "id": 7,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "160:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage_ptr",
                "typeString": "contract Campaign[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "name": "campaign_index",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "187:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "195:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "187:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "206:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16,
            "name": "test",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "233:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "233:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 14,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "249:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 18,
            "name": "fraudThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 152,
            "src": "268:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "268:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "campaignCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "cont",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "318:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:14:0"
            },
            "src": "296:36:0"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "375:167:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 28,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "394:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "404:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "394:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206672617564207468726573686f6c642073686f756c64206265206772656174686572207468616e2030",
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "407:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b5a8de82cdb5b7c08e4ca7bc74dffa6f8f5cc431f35eb659fce627ad8d42618",
                          "typeString": "literal_string \"The fraud threshold should be greather than 0\""
                        },
                        "value": "The fraud threshold should be greather than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b5a8de82cdb5b7c08e4ca7bc74dffa6f8f5cc431f35eb659fce627ad8d42618",
                          "typeString": "literal_string \"The fraud threshold should be greather than 0\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "386:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "386:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "386:69:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "bitcollect_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "468:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "487:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "487:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "468:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "468:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 39,
                      "name": "fraudThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "508:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "threshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "525:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "508:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "508:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "352:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "351:16:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:0"
            },
            "scope": 152,
            "src": "340:202:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "766:746:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 64,
                            "name": "_organizers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "785:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "785:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "804:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "785:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a204e656564206174206c656173742031206f7267616e697a6572",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "807:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3fba3570a331c614827e82634fbcb58b28994b20e7b45362a5722631e537665",
                          "typeString": "literal_string \"Error: Need at least 1 organizer\""
                        },
                        "value": "Error: Need at least 1 organizer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3fba3570a331c614827e82634fbcb58b28994b20e7b45362a5722631e537665",
                          "typeString": "literal_string \"Error: Need at least 1 organizer\""
                        }
                      ],
                      "id": 63,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "777:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "777:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "_beneficiaries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "873:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                              "typeString": "address payable[] memory"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "873:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "895:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "873:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a204e656564206174206c6561737420312062656e656669636961726965",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "898:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14a0df87b4e6f6b3ae127ef1de6f07fd857968b9ec5b57bc16bcc25c14830318",
                          "typeString": "literal_string \"Error: Need at least 1 beneficiarie\""
                        },
                        "value": "Error: Need at least 1 beneficiarie"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14a0df87b4e6f6b3ae127ef1de6f07fd857968b9ec5b57bc16bcc25c14830318",
                          "typeString": "literal_string \"Error: Need at least 1 beneficiarie\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "865:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "865:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 80,
                          "name": "_end_date",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "967:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1406,
                            "src": "977:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "977:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "967:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a207468652070726f76696465642063616d7061696e20656e64206461746520696c206973206561726c696572207468616e207468652073746172742064617465",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:72:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5a8be1d7c92fb12c74f9106e4d08162f851c489a9bbd0553f9152a605ff825a",
                          "typeString": "literal_string \"Error: the provided campain end date il is earlier than the start date\""
                        },
                        "value": "Error: the provided campain end date il is earlier than the start date"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5a8be1d7c92fb12c74f9106e4d08162f851c489a9bbd0553f9152a605ff825a",
                          "typeString": "literal_string \"Error: the provided campain end date il is earlier than the start date\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "959:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "959:108:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 88,
                            "name": "rewards_names",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "1086:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                              "typeString": "string memory[] memory"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1086:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 90,
                            "name": "rewards_costs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "1108:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1108:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1086:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f723a207265776172647320616e642072657761726473207072696365732073686f756c642068617665207468652073616d652063617264696e616c697479",
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:68:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0744fc57dbd56028a7549e64bdbc6a76d30e45d2337c81dedace388078ab9b86",
                          "typeString": "literal_string \"Error: rewards and rewards prices should have the same cardinality\""
                        },
                        "value": "Error: rewards and rewards prices should have the same cardinality"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0744fc57dbd56028a7549e64bdbc6a76d30e45d2337c81dedace388078ab9b86",
                          "typeString": "literal_string \"Error: rewards and rewards prices should have the same cardinality\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "1078:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:121:0"
                },
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "name": "new_campaign",
                      "nodeType": "VariableDeclaration",
                      "scope": 132,
                      "src": "1212:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Campaign_$1331",
                        "typeString": "contract Campaign"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 96,
                        "name": "Campaign",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1331,
                        "src": "1212:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "_organizers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1249:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "_beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1262:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_end_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1278:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1289:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "rewards_names",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1295:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "rewards_costs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "1310:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "fraudThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1325:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                          "typeString": "address payable[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 99,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1236:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_array$_t_string_memory_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_contract$_Campaign_$1331_$",
                        "typeString": "function (address[] memory,address payable[] memory,uint256,string memory,string memory[] memory,uint256[] memory,uint256) returns (contract Campaign)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 98,
                        "name": "Campaign",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1331,
                        "src": "1240:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:104:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Campaign_$1331",
                      "typeString": "contract Campaign"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1212:128:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "new_campaign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1366:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Campaign_$1331",
                          "typeString": "contract Campaign"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "campaigns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1351:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage",
                          "typeString": "contract Campaign[] storage ref"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1351:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Campaign_$1331_$returns$_t_uint256_$",
                        "typeString": "function (contract Campaign) returns (uint256)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1351:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 115,
                        "name": "campaign_index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1390:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 119,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 117,
                            "name": "new_campaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1413:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          ],
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1405:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1405:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1390:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 120,
                          "name": "campaigns",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1430:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_Campaign_$1331_$dyn_storage",
                            "typeString": "contract Campaign[] storage ref"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1430:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1430:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1390:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:58:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 128,
                            "name": "new_campaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1490:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Campaign_$1331",
                              "typeString": "contract Campaign"
                            }
                          ],
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1482:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1482:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 126,
                      "name": "campaignCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1466:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1466:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "EmitStatement",
                  "src": "1461:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCampaign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "name": "_organizers",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "574:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 45,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "574:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 46,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "574:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "_beneficiaries",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "604:39:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "604:15:0",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 49,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "604:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_end_date",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "645:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "661:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "name": "rewards_names",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "687:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "687:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 56,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "687:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "name": "rewards_costs",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "718:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 58,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "718:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 59,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "718:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "573:173:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:0:0"
            },
            "scope": 152,
            "src": "550:962:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1558:156:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1416,
                            "src": "1577:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1577:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 141,
                          "name": "bitcollect_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "1589:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1577:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e6572206f66207468697320426974436f6c6c65637420696e7374616e63652063616e2061636365737320746869732066756e6374696f6e",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1607:69:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de0db034d0fa7b91f17f8cd5637784ec74b02609a323ee3610f78513c85ae89b",
                          "typeString": "literal_string \"only the owner of this BitCollect instance can access this function\""
                        },
                        "value": "only the owner of this BitCollect instance can access this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de0db034d0fa7b91f17f8cd5637784ec74b02609a323ee3610f78513c85ae89b",
                          "typeString": "literal_string \"only the owner of this BitCollect instance can access this function\""
                        }
                      ],
                      "id": 138,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1419,
                        1420
                      ],
                      "referencedDeclaration": 1420,
                      "src": "1569:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:108:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 146,
                      "name": "fraudThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1688:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 147,
                      "name": "t",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1705:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1688:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "t",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1542:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1541:8:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:0:0"
            },
            "scope": 152,
            "src": "1520:194:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 153,
        "src": "99:1620:0"
      }
    ],
    "src": "0:1719:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {
        "0x66fe4817acfd8756899e5d70b8db5e2f51795f380411f9aa53f14f246cd7d204": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum BitCollect.State",
              "name": "s",
              "type": "uint8"
            }
          ],
          "name": "campainStatus",
          "type": "event"
        },
        "0x411e858052e32b5dc964584b768efeae626cd9581c315526b01b4f6d50d05390": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "name": "campainStatus",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xA90adBbE04541565759e341130eB48106946A374",
      "transactionHash": "0xee50b93a349d630e7eefb55b893405935c6e817bf4837e96cd1f865af41521cf"
    },
    "5777": {
      "events": {
        "0x3b5c6dff367f8fe540e018ee8cb76957ce7d9fafe57f188fa343a6d060844755": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "cont",
              "type": "address"
            }
          ],
          "name": "campaignCreated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x839645E7d894Bf9C3dB63498Cf415c37D2A2EDF0",
      "transactionHash": "0x029c7741a0637522b0e3cf3620d1e03abd8481673ccbd9211d639b6ce65fff72"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-07-07T21:03:22.235Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}